# This is a basic workflow to help you get started with Actions

name: InvokeADFPipeline

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  build-and-deploy:
    runs-on: ubuntu-latest
    steps:

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: PowershellScript
      id: ReadKeyVaultPowershell
      env:
        RESOURCEGROUPNAME: ${{ secrets.RESOURCEGROUPNAME }}
        EVENTGRIPTOPIC: ${{ secrets.EVENTGRIPTOPIC }}
      shell: pwsh
      
      run: |
            echo "$RESOURCEGROUPNAME"
            echo ${{ secrets.EVENTGRIPTOPIC }}
            $resourceGroupName = "$RESOURCEGROUPNAME"
            $topicName = "$EVENTGRIPTOPIC"
            $endpoint = (Get-AzEventGridTopic -ResourceGroupName $resourceGroupName -Name $topicName).Endpoint
            $keys = Get-AzEventGridTopicKey -ResourceGroupName $resourceGroupName -Name $topicName
            $eventID = Get-Random 99999

            #Date format should be SortableDateTimePattern (ISO 8601)
            $eventDate = Get-Date -Format s

            #Construct body using Hashtable
            $htbody = @{
                id= $eventID
                eventType="recordInserted"
                subject="myapp/vehicles/motorcycles"
                eventTime= $eventDate   
                data= @{
                    make="Ducati"
                    model="Monster"
                }
                dataVersion="1.0"
            }

            #Use ConvertTo-Json to convert event body from Hashtable to JSON Object
            #Append square brackets to the converted JSON payload since they are expected in the event's JSON payload syntax
            $body = "["+(ConvertTo-Json $htbody)+"]"
            Invoke-WebRequest -Uri $endpoint -Method POST -Body $body -Headers @{"aeg-sas-key" = $keys.Key1}

    